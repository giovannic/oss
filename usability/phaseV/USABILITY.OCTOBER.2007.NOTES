Candidate #1   (_name_)

PHASE I.

User launches openss

User starts typing in the command panel
(my tip about using the same command in openss as
 used to run sweep3d outside of openss was confusing)

We ask user to start over and follow scenario/assignment 
sheet.

User looking at Wizard panel, picks generate new performance data

loadPanel dragged off the openss window (no buttons go with it)

user makes comment - let me type command into the mpi executable 
browse entry line.

after setting up the experiment through the generic wizard
user looks around experiment window.   Thought it was already
run but experiment was only created.

User says it would be better to run the experiment upon the
user hitting the final wizard "Finish" button

working his way through the scenario use hits the source path
remapping issue we had in the scenario.  The application was created
in another directory so the source isn't found.  The task was to use
the preference panel to remap the old path to the new path.

User looked in the source panel to do the remapping but nothing there
after several searches for this functionality we helped the user.  It
is not obvious how to do this the way it is currently set up.

Discussion occurred about this and some suggestions were tossed out:
  1) Message about the problem:  Have this be a dialog box with the old path already
                                 filled in or even the new source filled in if found
                                 in the current directory *(with a question asking if
                                 this is the correct file or directory).

For the task about finding if any of the ranks took more time than any other rank,
the user chose the "Group Similar Processes" menu item.   It was not the functionality
he would have expected.  He suggested something along the lines of having an view that
shows the min, max, median, mapped against the rank we are comparing against.  Maybe
having a bar graph that you could click on to get further breakdown.
User stated this would be useful on Blue Gene.

User tried to focus on some of the ranks and chose the master thread rank instead of
the real ranked process and didn't get data.   User suggested we not show the master
thread rank process.  IBM tools don't show them.

In the Custom Stats Panel, user chose Update menu item instead of Focus Stats Panel.

It was not easy for the user to find out how to display 1 rank.  The
option in the Stats Panel for showing ranks (when 8 or less ranks are in the experiment)
is not usable.  You deselect ranks with clicks not select them and you have to do this
7 times to get to see only one rank.   Then two more clicks and displays to switch
to another individual rank.

Suggestion to bring up two columns always in the custom comparison panel.

Users thoughts at end:

Seem a bit slow.

TV - simple to get started

Come up and do more for user, instead of having to set up everything.

  Our comments were that we can: openss -f "executable" experiment_type
  will bring up the experiment ready to run.
  
  We were testing the MPI wizard capabilities, so we wanted to run through
  the wizard process.
 


Candidate #2   (Mike)

PHASE I.

Mike also started by typing into the command line.  Then after
being told not too he managed to almost create the expected experiment
through using the Custom Experiment menu item.  This was intended for
advanced users.   He did not follow the scenario instructions initially.

After restarting and following the scenario instructions he did follow through
the wizard steps and create the pcsamp experiment for sweep3d.

Mike thought we should really ask to load the application first.

The pcsamp finish page has some confusing text.  Mike did not elaborate but
the pcsamp finish page text needs to be reviewed and made to be more clear.

Mike also was distracted by the progress bar going back and forth while the
program was being loaded.

Another comment was that we have "Stats" in the source panel column for the
statistics that are annotating the source lines.  Then the Stats Panel is also
around as a tab.  This is potentially  confusing.  (jeg-note: the shading on
the system we were on was very bad and this caused a lot of the issues with
users not knowing what panels were active and what icons belonged to each panel).
The shading issue needs to be fixed asap.

It was noted by jeg that we need to change the default naming of experiment results
and use the executable name and experiment type in the name, instead of the experiment
number.  For example, X1.1.openss would become sweep3d.pcsamp.openss.

Bronis suggested using more colors, patterns, "light up" the buttons when passing over the
active buttons.

Mike said capitols should be last not first, in our sort.

Mike said the entire text for the headers of our columns for the stats panel 
should be able to be found out somehow without moving the column manually over 
to the right.  He suggested that hovering over them could show the entire text there.

Mike also would like path remapping more obvious in the source panel area.
Handle the tilde (~) in the path remapping code.

There is bug with "Show statistics" was up when it was already showing.

Have metadata for the source panel, such as source directory.

The "Group Similar Processes" terminology should be changed.  Similar not
a good word in this context.

Candidate #3   (Matt)

PHASE I.

We had some initial problems under Matt's account, so ended up
running under Martin's account.

The candidate went shooting through the wizard panels very quickly.
Noted that the buttons weren't lined up so one could keep the cursor
at the same location and click through to the end.

The candidate didn't want to have to go through all the wizard panels
to do the task.

Comment: let the user know, in a more explicit manner, that the data is aggregated.

Comment: More quick links for "by statement", "statements by function" etc.
We showed him the tool bar: which was exactly what he was thinking about.

Comment: Use the tool bar for more items that are hidden in the menu.
Suggests that "More metadata" should be on the same line with the other icons.
Use icon for "group similar processes".   

This (group similar processes) is useful but would also like a way to get at 
each individual ranks compared per column.

Also, have an easier way to switch state (?).

Candidate had trouble with the path remapping.  Very surprized that the
old path wasn't remembered and that it was even necessary.  

Group suggestion: this should be automated as much as possible to make this
easier on the user.  Maybe totally do it and just ask the user to confirm
if what the tool has done is correct.

Candidate found a lot of the tool was very useful.  

Candidate liked the per statement views and source annotation by statistics.

Candidate said the wizard steps seemed reasonable to him.

The custom stats panel task was just about to begin when we ran out of time.



Candidate #4   (_name_)

PHASE I.

Candidate used the wizards well and chose to do hardware counters
instead of pcsamp.

Candidate noted that should be able to enter executable in the loadPanel
browse executable text edit line.

Candidate started clicking in the Manage process panel before experiment
was run.  This focused on one of the ranked processes.  (Probably should
disable the focus until after the run?)

Candidate was expecting to see top level menu items for the currently active
experiment in what are now experiment independent menus and menu items.
(We need to think about this in detail before acting).

Candidate suggested having a sort by time option in the manage process panel.

Candidate suggested:
In the group similar processes output window, have the functions on the left 
side of the display, not the right.  Currently, if lots of columns, one would 
have to move the slider way over to the right to see the function names.

Candidate suggested using a "pin" icon to indicate this is a saved panel (don't
reuse).  The terminology we are using scared him away from this (reuse/recycle
implies other things to him).

Candidate feels the Wizard Finish button should also run the experiment.

Candidate then ran some of his own codes and we talked with him about the
functionality he sees as being very useful:
  1) showing the performance data for all lines that access a specified
     data structure.  Sometimes many accesses that don't seem to take a lot
     of time add up to a huge amount over the life of the program execution
     because they are referenced so often.  Improving the access of this
     data structure would be a key item for the developer of the software.
     So, finding it is important.





Global comments/summary:


################################################################################
# Copyright (c) 2005 Silicon Graphics, Inc. All Rights Reserved.
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
################################################################################

openss(1)                                                openss(1)


NAME
  openss - Collects Open|Speedshop performance data

SYNOPSIS
  openss [-f executable] [-h host] [-x experiment_name]
              [-p process_ID [-r thread_rank] ]
              [-a "command line args"]


DESCRIPTION
  Open|Speedshop is a performance tool designed to capture performance data
  for an executable(s).

  When collecting the performance data, openss either writes the data to 
  a file or makes it available to be displayed by the command line interface
  or the graphical user interface.
 
  You can specify the following options on the command line:
    -f executable
      Specifies the executable to run the performance experiment on.

    -h host
      Specifies the target host.

    -x experiment_name
      Specifies the experiment to be run on the executable or process.

      o pssamp   - Actual CPU time at the source line, machine instruction,
                   and function levels by sampling the program counter at
                   10 or 1-millisecond intervals. See â€œPC Sampling
                   Wizard.
  
      o usertime - Inclusive and exclusive CPU time for each function by
                   sampling the callstack at 30-millisecond intervals.
                   See   User Time Wizard.

      o fpe      - All floating-point exceptions, with the exception type
                   and the call stack at the time of the exception. See 
                   FPE Tracing Wizard.

      o hwc      - Counts at the source line, machine instruction, and
                   function levels of various hardware events, including:
                   clock cycles, graduated instructions, primary
                   instruction cache misses, secondary instruction cache
                   misses, primary data cache misses, secondary data
                   cache misses, translation lookaside buffer (TLB)
                   misses, and graduated floating-point instructions.
                   See HW Counter Wizard.

      o io       - Traces the following I/O system calls: read, readv,
                   write, writev, open, close, dup, pipe, creat. 
                   See IO Wizard.

      o mpi      - Traces calls to various MPI routines.
                   See MPI Wizard.

    -p process_ID
      Specifies the running process to attach to for performance gathering.

    -r thread_rank
      Specifies which thread of a process to gather data.

    -a "command line arguments"
      Specifies the arguments to be passed to the executable that is being
      run.

EXAMPLES:
  To start Open|Speedshop simply type:
  $ openss


  To load an executable into Open|Speedshop
  for eventual capturing of data:
  $ openss -f a.out


  To attach to a running executable:
  $ openss -p 123456


  To load an executable to run a simple timing (pcSampling) experiment:
  $ openss -f a.out -x pcsamp


COMMAND LINE:
    Currently the command line interface is unavailable.

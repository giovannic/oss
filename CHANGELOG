
New OpenSpeedShop-2.1 release

1) MPI-3 standard support in the MPI wrappers.
2) Experimental CBTF instrumentor support, if built for CBTF instrumentation
   a) 4 new experiments (under development)  mem, pthread, iop, and cuda
   b) MRNet based performance data transport mechanism.
3) Many bug fixes for the offline version.
4) Different installation mechanism based on install-tool.


Changes in 2.0.0 since 1.9.3.4

1) More general support for support of PPC platforms

2) More general support for support of Cray-XT/XE and Blue Gene platforms.

3) Updated man pages and convenience scripts

4) More general support for the online/dynamic version of OpenSpeedShop

5) TBD

Changes in 1.9.3.4 since the 1.9.3.3 release:

1) TBD

2) Incremental fixes toward support for PPC platforms

3) Incremental fixes toward support for the Cray-XT5 and BG/P platforms.



Changes in 1.9.3.3 since the 1.9.3.2 release:

1) Fix call stack unwinding bugs by patching the libunwind component

2) Incremental fixes toward support for PPC platforms

3) Incremental fixes toward support for the Cray-XT5 and BG/P platforms.

4) Fixes for better mpich2 and mvapich2 support for OpenSpeedShop experiments 
   on Fortran applications.

5) Make configuration changes so that MRNet 2.2 and Dyninst 6.1 are the default
   versions for OpenSpeedShop.



Changes in 1.9.3.2 since the 1.9.3.1 release:

1) Removed all autogen created files. Now use libtool 2.2x,
automake 1.11, and autoconf 2.65 for deveopment builds from cvs source.

2) Updates to better support mvapich, mpt, and openmpi.
   Support for wrapping Fortran MPI calls was needed.

3) Add osslink command to support building static applications
with static collectors.

4) More addtional updates to better support mvapich, mpt, openmpi, and Intel mpi (mpich2)
   For Intel mpi, when building set the OPENSS_MPI_MPICH2 environment variable to the path
   to the Intel mpi installation directory.

Changes in 1.9.3.1 since the 1.9.3 release:

1) Many fixes to support OpenSpeedShop usage on FC11.

Changes in 1.9.3 since the 1.9.2 release:

1) Configuration changes to support creating target static collectors and a static runtime library for inclusion into static application binaries to gather performance data.

2) Improvements to the online version, where support for non-threaded MPI implementations is working now at higher processor counts.

3) Several bug fixes.   A key bug that was fixed was an problem in performance gathering that occurred when hundreds of dsos were loaded and unloaded.

4) Configuration improvements in a number areas including improved recognition of PAPI, MRNET, and DYNINST installations.


Changes in 1.9.2 since the 1.9.1 release:

1) Add a scrollview bar to the preference panel General page

2) Add toolbar and icons to the Customize Stats Panel for more ease of use. 

3) Add an option to enable and disable the showing of the advanced (more robust) feature icons in the StatsPanel toolbar.

4) Use the above option to reduce the toolbar to a manageable number for normal users.

5) Add a feature to allow users to get at the various metrics (specific pieces of performance information) for each experiment by selecting check boxes corresponding to the metrics.  The StatsPanel icon "OV" representing Optional View, will raise a dialog panel corresponding to the particular experiment.   Check the boxes and when "OK" is clicked a new StatsPanel view reflecting the choices will be generated.

6) Add the "TS" icon in the StatsPanel to bring up the Time Segment dialog box.  This lets the user choose the part his programs execution to view the data for.  So, by choosing a segment of the programs execution, only that portion of the programs performance data will be shown when the user clicks the "OK" button.

7) Improvements to the MPICH2 and MVAPICH configuration.  Add support for configuration of MVAPICH2.

8) Enhance the StatsPanel for comparisons to show the general toolbar and also to allow users to focus the StatsPanel on one of the experiments being compared.  A dialog box will allow the selection of one of the experiments when the user selects a performance data view they would like to see.

9) Bug fix for an address range problem where for some programs the performance data was lost for the main application.  

10) Performance improvements to generating call tree views.

11) Numerous improvements to the collector runtimes for speed and efficiency.

12) Changes to the openss command syntax accepted:
    a) -offline is now optional on the openss command for running in offline mode.  Offline is default.
    b) openss -cli  now brings up the CLI in offline mode
    c) openss -cli -online bring up the CLI in online/dynamic mode
    d) openss -f "executable" experiment_type nows loads the executable, creates, and runs the experiment in offline mode.
    e) openss -gui -f "executable" experiment_type nows loads the executable, creates the experiment in offline mode ready to run in the GUI.
    e) openss -gui -online -f "executable" experiment_type nows loads the executable, creates the experiment in online mode ready to run in the GUI.
    e) openss -f <openss_database_file_name>.openss still brings up the GUI with the performance data displayed in the GUI.



Changes in 1.9.1 since the 1.9 release:

1) Fix mis-spelling in the Stats Panel regarding communicator metric settings which caused the communicator to not be available for display in the Stats Panel.

2) Fix misnamed mpit metric references in the GUI and support more optional metric names in mpit view.

3) Fix a mis-match in the default setting for less restrictive compares.  It is off by default, but it didn't honor the true setting until the preference was reset to true.

4) Remove import of tempfile.  Not currently used and is causing a runtime undefined error on ubuntu 8.10 (intrepid).

5) Update the Makefile.am files for all the wizards to include -libopenss-guiobjects where the ArgumentObject dso is located.  This changed to support Ubuntu-8.10.

6) Modify the openssd shutdown process to work properly with MRNet 2.0.  This is related to the online mode of operation.  The daemons were not able to shutdown cleanly before this change.

7) When no preference file has been written return the default value for instrumentorIsOffline, so that the OpenSpeedShop wizards have offline as the default instrumentation mechanism.

8) Speedups for ossutil processing when processing symbols from the offline experiment.   ossutil is the utility that converts raw data files written by running the offline version of OpenSpeedShop.  

9) Fixes to the offline script to invoke openss to support mpiexec for mpich2 and SGI MPT MPI implementations.



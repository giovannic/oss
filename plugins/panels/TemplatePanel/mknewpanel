#!/bin/sh

################################################################################
# Copyright (c) 2005 Silicon Graphics, Inc. All Rights Reserved.
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
################################################################################

# echo "arg count = $#"

export PANEL_DIR=$1
export PANEL_NAME=$2
export MENU_HEADING=$3
export MENU_LABEL=$4
export MENU_ACCEL=$5
export SHOW_IMMEDIATE=$6
export PLUGIN_GROUPING=$7

usage ()
{
  echo "usage: mknewpanel directory panelname \"menu header\" \"menu label\" \"menu accel\" \"show immediate\" \"grouping\""
  echo "where:"
  echo "  directory:  Is the path to the directory to put the new panel code."
  echo "  panelname:  Is the name of the new panel."
  echo "  menu header: Is the Menu named to be put on the menu bar."
  echo "  menu label: Is the menu label under the menu header."
  echo "  menu accel: Is the menu accelerator."
  echo "  show immediate: Default is 0.  Setting this to 1 will display the panel upon initialization."
  echo "  grouping: Which named panel container should this menu item drop this panel by default."

  echo ""
  echo "Example:"
  echo "cd .../panels/TemplatePanel"
  echo "$ mknewpanel ../TestPanel TestPanel "TestPanel" \"Test Panel\" \"Cntrl B\" 1 "Performance""
  echo "vi .../panels/Makefile.am   << Add TestPanel to this directory list."
  echo "vi .../../configure.ac   << Add TestPanel to this directory list. Use"
  echo "                            use CmdPanel as an example."
  echo "You then need to rebuild from the top level."
  exit
}

if [ "$PANEL_DIR" = "" ] 
then
  echo "No directory path and name."
  usage
fi
export BASE=`basename $PANEL_DIR`


if test -d $PANEL_DIR
then
  echo "Directory $PANEL_DIR already exists..."
  echo "Do you want to delete the old and create a new one? y|n"
  read answer
  if [ $answer = y ]
  then
    echo "Removing old $PANEL_DIR"
    rm -fr $PANEL_DIR
    echo "Making new $PANEL_DIR"
    mkdir $PANEL_DIR
    echo "... continuing..."
  else
    echo "Okay, exiting without doing anything..."
    exit
  fi
else
  mkdir $PANEL_DIR
fi

if [ "$PANEL_NAME" = "" ]
then
  echo "No panel name."
  usage
fi

if [ "$MENU_HEADING" = "" ]
then
  MENU_HEADING=$BASE
  echo "No menuheader."
  usage
fi

if [ "$MENU_LABEL" = "" ]
then
  MENU_LABEL=$BASE
  echo "No menulabel."
  usage
fi

if [ "$MENU_ACCEL" = "" ]
then
  MENU_ACCEL=$BASE
  echo "warning: No menu accelerator."
  usage
fi


if [ "$SHOW_IMMEDIATE" = "" ]
then
  echo "show immediate"
  usage
fi

if [ "$PLUGIN_GROUPING" = "" ]
then
  echo "no grouping"
#  usage
fi

echo "PANEL_DIR=$PANEL_DIR"
echo "PANEL_NAME=$PANEL_NAME"
echo "MENU_HEADING=$MENU_HEADING"
echo "MENU_LABEL=$MENU_LABEL"
echo "MENU_ACCEL=$MENU_ACCEL"
echo "SHOW_IMMEDIATE=$PLUGIN_GROUPING"
echo "PLUGIN_GROUPING=$PLUGIN_GROUPING"


# mkdir
if test -d $PANEL_DIR
then
  echo "Preparing to create your new $PANEL_NAME files."
else
  echo "There's still no $PANEL_DIR directory.   Couldn't create... exiting."
  exit
fi


if ! test -d $PANEL_DIR 
then
  echo "no directory $PANEL_DIR"
  exit
fi

rm -fr sed.script
echo "s/TemplatePanel/$PANEL_NAME/g" >sed.script
cat Makefile.am | sed -f sed.script >$PANEL_DIR/Makefile.am


cat TemplatePanel.hxx | sed -f sed.script >$PANEL_DIR/$PANEL_NAME.hxx
echo "s/PLUGIN_GROUPING/$PLUGIN_GROUP/g" >>sed.script
cat TemplatePanel.cxx | sed -f sed.script >$PANEL_DIR/$PANEL_NAME.cxx

echo "s/SHOW_IMMEDIATE/$SHOW_IMMEDIATE/g" >>sed.script
echo "s/MENU_HEADING/$MENU_HEADING/g" >>sed.script
echo "s/MENU_LABEL/$MENU_LABEL/g" >>sed.script
echo "s/MENU_ACCEL/$MENU_ACCEL/g" >>sed.script
echo "s/PLUGIN_GROUPING/$PLUGIN_GROUP/g" >>sed.script
cat local_plugin_info.hxx | sed -f sed.script >$PANEL_DIR/local_plugin_info.hxx
cp preference_plugin_info.hxx $PANEL_DIR

rm -fr sed.script

echo "Succeeded: Finished creating files in $PANEL_DIR."
echo "You'll now need to edit the panels/Makefile.am to add this new"
echo "directory to the build list."
echo "You'll also need to modify the top level configure.ac file to add"
echo "the new directory to the list of directories to have makefiles"
echo "created."

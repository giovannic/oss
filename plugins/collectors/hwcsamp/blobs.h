/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _BLOBS_H_RPCGEN
#define _BLOBS_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct hwcsamp_parameters {
	u_int sampling_rate;
	char hwcsamp_event[512];
};
typedef struct hwcsamp_parameters hwcsamp_parameters;

typedef uint64_t evcounts[6];

struct hwcsamp_event {
	uint64_t hwccounts[6];
};
typedef struct hwcsamp_event hwcsamp_event;

struct hwcsamp_data {
	uint64_t interval;
	struct {
		u_int pc_len;
		uint64_t *pc_val;
	} pc;
	struct {
		u_int count_len;
		uint8_t *count_val;
	} count;
	struct {
		u_int events_len;
		hwcsamp_event *events_val;
	} events;
	float clock_mhz;
};
typedef struct hwcsamp_data hwcsamp_data;

struct hwcsamp_start_sampling_args {
	u_int sampling_rate;
	char hwcsamp_event[512];
	int experiment;
	int collector;
};
typedef struct hwcsamp_start_sampling_args hwcsamp_start_sampling_args;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_hwcsamp_parameters (XDR *, hwcsamp_parameters*);
extern  bool_t xdr_evcounts (XDR *, evcounts);
extern  bool_t xdr_hwcsamp_event (XDR *, hwcsamp_event*);
extern  bool_t xdr_hwcsamp_data (XDR *, hwcsamp_data*);
extern  bool_t xdr_hwcsamp_start_sampling_args (XDR *, hwcsamp_start_sampling_args*);

#else /* K&R C */
extern bool_t xdr_hwcsamp_parameters ();
extern bool_t xdr_evcounts ();
extern bool_t xdr_hwcsamp_event ();
extern bool_t xdr_hwcsamp_data ();
extern bool_t xdr_hwcsamp_start_sampling_args ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_BLOBS_H_RPCGEN */

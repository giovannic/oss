This is so I can track what commands I have worked
on for the scripting module and what exactly needs
to be done for each one.

*****************************************************
<target_list>	    	Not tested Not done
<host_list_spec>    	Done
<rank_list_spec>    	Done
<pid_list_spec>     	Done
<file_list_spec>    	Done
<thread_list_spec>  	Done
<cluster_list_spec> 	Done
<expId_spec>        	Done
<linenumber_list_spec>	Done
<viewType_list>   	Done
<modifier_list_spec>	Done
<expMetric_list>   	Done for simple tuples
<expMetric> 	    	Not tested,Not done
<expParam>  	    	Not tested,Not done
<expParamValue>   	Not tested,Not done
<expType_list>   	Done


*****************************************************
expAttach [ <expId_spec> ] [ -mpi ] [ <target_list> ] [ <expType_list> ]

Done: 
    Single complex commandline with all options

Todo: 
    Variants that test the optionality of the options.
    Error testing.

*****************************************************
*****************************************************
expClose [ <expId_spec> || all ] [ kill ]

Done: 
    Legal variations using -M for modifiers.

Todo:
    Error testing.

*****************************************************
*****************************************************
<expId> = expCreate [ <target_list> ] [ <expType_list> ]

Done: 
    Tested with informal <target> and <expType_list> with
    variations of optionality. 

Todo:
    Test with formal <target_list> class.
    Error handling.

*****************************************************
*****************************************************
expDetach [ <expId_spec> ] [ <target_list> ] [ <expType_list> ]

Done: 
    Tested with informal <target> and <expType_list> with
    variations of optionality. 
    Tested with expCreate generated <expId_spec>.

Todo:
    Test with formal <target_list> class.
    Error handling.

*****************************************************
*****************************************************
expDisable [ <expId_spec> || all ]

Done: 
    Legal variations using -M for modifiers.

Todo:
    Error testing.

*****************************************************
*****************************************************
expEnable [ <expId_spec> || all ]

Done: 
    Legal variations using -M for modifiers.

Todo:
    Error testing.

*****************************************************
*****************************************************
<expId> = expFocus [ <expId_spec> ]

Done: 
    Legal variations tested.
    Return value tested.

Todo:
    Error testing.

*****************************************************
*****************************************************
expGo [ <expId_spec> || all ]

Done: 
    Legal variations using -M for modifiers.

Todo:
    Error testing.

*****************************************************
*****************************************************
expPause [ <expId_spec> || all ]

Done: 
    Legal variations using -M for modifiers.

Todo:
    Error testing.

*****************************************************
*****************************************************
<expId> = expRestore  <file_spec>

Done: 
    Legal variations tested.
    Return value tested.

Todo:
    Error testing.

*****************************************************
*****************************************************
expSave [ <expId_spec> ] [ copy ] <file_spec>

Done: 
    Legal variations using -M for modifiers.

Todo:
    Error testing.

*****************************************************
*****************************************************
expSetParam  [ <expId_spec> ] <expParam> = <expParamValue> [ , <expParam> = <expParamValue> ]+

Done:
    Tested legal variations.

Todo: 
    Error testing 

*****************************************************
*****************************************************
expStatus [ <expId_spec> || all ]

Done: 
    Legal variations using -M for modifiers.

Todo:
    Error testing.

*****************************************************
*****************************************************
expView [ <expId_spec> ] [ <viewType> ] [ -m <expMetric_list> ] [ <target_list> ]

Done: 
    Tested with informal <target> and <expType_list> with
    variations of optionality. 

Todo:
    Test with formal <target_list> class.
    Error handling.

*****************************************************
*****************************************************
<ListOf_breakId> = listBreaks [ <expId_spec> || all ]

Done:
    Tested with return value with all variants.

Todo:
    Error checking.

*****************************************************
*****************************************************
<listOf_expId> = listExp

Done:
    Tested with return value.

Todo:
    Error checking.
    
*****************************************************
*****************************************************
<ListOf_hostname> = listHosts [ <expId_spec> ]

Done: 
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of strings,
    but this could also be a numeric IP address.

*****************************************************
*****************************************************
<ListOf_expMetric> = listMetrics [ <expId_spec> || all || <expType_list> ]

Done:
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of strings,
    but should be <ListOf_expMetric>.

*****************************************************
*****************************************************
<ListOf_filename> = listObj [ <expId_spec> ] [ <target> ]

Done:
    Tested with return value.

Todo:
    Error checking.

*****************************************************
*****************************************************
<ListOf_expParam> = listParams [ <expId_spec> || all || <expType_list> ]

Done:
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of strings,
    but should be <ListOf_expParam>.
    

*****************************************************
*****************************************************
<ListOf_pidname> = listPids [ <expId_spec> ] [ <host_list_spec> ]

Done:
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of integers,
    but should be <ListOf_pidname>.

*****************************************************
*****************************************************
<ListOf_rankname> = listRanks [ <expId_spec> ] [ <target> ]

Done:
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of integers,
    but should be <ListOf_rankname>.

*****************************************************
*****************************************************
<string> = listSrc [ <expId_spec> ] [ <target> ] [ <linenumber_list_spec> ]

Done:
    Tested with variations.

Todo:
    Error checking.

*****************************************************
*****************************************************
<ListOf_statusType> = listStatus [ <expId_spec> || all ] 

Done:
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of strings,
    but should be <ListOf_statusType>.

*****************************************************
*****************************************************
<ListOf_threadname> = listThreads [ <expId_spec> ] [ <target> ]

Done:
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of integers,
    but should be <ListOf_statusType>.

*****************************************************
*****************************************************
<ListOf_expType> = listTypes [ <expId_spec> || all ] 

Done:
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of strings,
    but should be <ListOf_expType>.

*****************************************************
*****************************************************
<ListOf_viewType> = listViews [ <expId_spec> || all || <expType_list> ]

Done:
    Tested with return value.

Todo:
    Error checking.
    Return value is currently just a list of strings,
    but should be <ListOf_viewType>.

*****************************************************
*****************************************************
clearbreak <breakId>

Done:
    Tested.

Todo:
    Error checking.

*****************************************************
*****************************************************
exit

Done:
    Tested.

Todo:
    Error checking.

*****************************************************
*****************************************************
<string> = help [ <verbosity_list_spec> ] [ <string> ]

Done:
    Tested with return value.

Todo:
    Error checking.

*****************************************************
*****************************************************
<string> = history  [ <int> ]

Done:
    Tested with return value.

Todo:
    Error checking.

*****************************************************
*****************************************************
log [ <file_spec> ]

Done:
    Tested.

Todo:
    Error checking.

*****************************************************
*****************************************************
openGui

Done:
    Tested.

Todo:
    Error checking.

*****************************************************
*****************************************************
playback <file_spec>

Done:
    Tested.

Todo:
    Error checking.

*****************************************************
*****************************************************
record [ <file_spec> ]

Done:
    Tested.

Todo:
    Error checking.

*****************************************************
*****************************************************
<breakId> = setbreak [ <expId_spec> ] [ <target> ] <address_description>

Done:
    Tested with return value.

Todo:
    Error checking.
    BreakId should be returned as a class object.

*****************************************************


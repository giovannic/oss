###############################################################################
# Copyright (c) 2005 Silicon Graphics, Inc. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA
################################################################################

To run this test manually in this directory, do:

./runone-dpcl

This will activate the ..../current/test/test_scripts/runone-dpcl 
script which looks for *.tst files in the dpcl directories and
executes them.   There is an expected results file: one_shot.tst.expected
which is compared with the one_shot.tst.output file.   If they
match the testresults file reports PASSED otherwise it reports failed.

This test was adapted from Steve's original run scripts and files.


ORIGINAL run informatation

   ./run 15 localhost 

ORIGINAL SCRIPT ./run follows
#! /bin/tcsh

rm -f mutator mutatee LOG core.*

set count = $1
set localhost = $2

echo " Calling mysleep $count times"
echo " Going to: $localhost"

gcc -g -I/scratch/slc/perftools/ROOT/include/dpcl -fpic -L /scratch/slc/perftools/ROOT/lib  -shared -o /tmp/hello.so hello.c 

g++ -g -D__64BIT__ -o mutator mutator.cxx \
        -I/scratch/slc/perftools/ROOT/include/dpcl \
        -L/scratch/slc/perftools/ROOT/lib \
        -ldpcl -lelf

gcc -g -gdwarf-2 -o mutatee mutatee.c

./mutator $localhost $cwd/mutatee $count

#pkill dpcl
pkill -9 mutatee
#rm -f  /tmp/dpcl.*
rm /tmp/hello*

